// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/proto/friend_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Common message types
type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	DisplayName   string                 `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_api_proto_friend_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Friend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId      string                 `protobuf:"bytes,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FriendInfo    *User                  `protobuf:"bytes,4,opt,name=friend_info,json=friendInfo,proto3" json:"friend_info,omitempty"` // Optional user information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Friend) Reset() {
	*x = Friend{}
	mi := &file_api_proto_friend_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friend.ProtoReflect.Descriptor instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{1}
}

func (x *Friend) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Friend) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *Friend) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Friend) GetFriendInfo() *User {
	if x != nil {
		return x.FriendInfo
	}
	return nil
}

type MutualFriend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendId      string                 `protobuf:"bytes,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	FriendInfo    *User                  `protobuf:"bytes,2,opt,name=friend_info,json=friendInfo,proto3" json:"friend_info,omitempty"`
	MutualCount   int32                  `protobuf:"varint,3,opt,name=mutual_count,json=mutualCount,proto3" json:"mutual_count,omitempty"` // Number of mutual connections
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutualFriend) Reset() {
	*x = MutualFriend{}
	mi := &file_api_proto_friend_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutualFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualFriend) ProtoMessage() {}

func (x *MutualFriend) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualFriend.ProtoReflect.Descriptor instead.
func (*MutualFriend) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{2}
}

func (x *MutualFriend) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *MutualFriend) GetFriendInfo() *User {
	if x != nil {
		return x.FriendInfo
	}
	return nil
}

func (x *MutualFriend) GetMutualCount() int32 {
	if x != nil {
		return x.MutualCount
	}
	return 0
}

type Recommendation struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UserId            string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserInfo          *User                  `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	MutualFriendCount int32                  `protobuf:"varint,3,opt,name=mutual_friend_count,json=mutualFriendCount,proto3" json:"mutual_friend_count,omitempty"`
	Score             float64                `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	Reason            string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Recommendation) Reset() {
	*x = Recommendation{}
	mi := &file_api_proto_friend_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recommendation) ProtoMessage() {}

func (x *Recommendation) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recommendation.ProtoReflect.Descriptor instead.
func (*Recommendation) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{3}
}

func (x *Recommendation) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Recommendation) GetUserInfo() *User {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *Recommendation) GetMutualFriendCount() int32 {
	if x != nil {
		return x.MutualFriendCount
	}
	return 0
}

func (x *Recommendation) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Recommendation) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Request/Response messages for AddFriend
type AddFriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId      string                 `protobuf:"bytes,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFriendRequest) Reset() {
	*x = AddFriendRequest{}
	mi := &file_api_proto_friend_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendRequest) ProtoMessage() {}

func (x *AddFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendRequest.ProtoReflect.Descriptor instead.
func (*AddFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{4}
}

func (x *AddFriendRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddFriendRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type AddFriendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Friendship    *Friend                `protobuf:"bytes,3,opt,name=friendship,proto3" json:"friendship,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFriendResponse) Reset() {
	*x = AddFriendResponse{}
	mi := &file_api_proto_friend_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFriendResponse) ProtoMessage() {}

func (x *AddFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFriendResponse.ProtoReflect.Descriptor instead.
func (*AddFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{5}
}

func (x *AddFriendResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddFriendResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddFriendResponse) GetFriendship() *Friend {
	if x != nil {
		return x.Friendship
	}
	return nil
}

// Request/Response messages for RemoveFriend
type RemoveFriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId      string                 `protobuf:"bytes,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFriendRequest) Reset() {
	*x = RemoveFriendRequest{}
	mi := &file_api_proto_friend_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFriendRequest) ProtoMessage() {}

func (x *RemoveFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFriendRequest.ProtoReflect.Descriptor instead.
func (*RemoveFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveFriendRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveFriendRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type RemoveFriendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFriendResponse) Reset() {
	*x = RemoveFriendResponse{}
	mi := &file_api_proto_friend_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFriendResponse) ProtoMessage() {}

func (x *RemoveFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFriendResponse.ProtoReflect.Descriptor instead.
func (*RemoveFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveFriendResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveFriendResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request/Response messages for GetFriends
type GetFriendsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit           int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                                              // Default: 50, Max: 100
	PageToken       string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`                      // For pagination
	IncludeUserInfo bool                   `protobuf:"varint,4,opt,name=include_user_info,json=includeUserInfo,proto3" json:"include_user_info,omitempty"` // Whether to include friend's user info
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetFriendsRequest) Reset() {
	*x = GetFriendsRequest{}
	mi := &file_api_proto_friend_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsRequest) ProtoMessage() {}

func (x *GetFriendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsRequest.ProtoReflect.Descriptor instead.
func (*GetFriendsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetFriendsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFriendsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetFriendsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *GetFriendsRequest) GetIncludeUserInfo() bool {
	if x != nil {
		return x.IncludeUserInfo
	}
	return false
}

type GetFriendsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Friend        *Friend                `protobuf:"bytes,1,opt,name=friend,proto3" json:"friend,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Empty if no more results
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`           // Total number of friends (only in first response)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendsResponse) Reset() {
	*x = GetFriendsResponse{}
	mi := &file_api_proto_friend_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsResponse) ProtoMessage() {}

func (x *GetFriendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsResponse.ProtoReflect.Descriptor instead.
func (*GetFriendsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetFriendsResponse) GetFriend() *Friend {
	if x != nil {
		return x.Friend
	}
	return nil
}

func (x *GetFriendsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GetFriendsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Request/Response messages for GetFriendCount
type GetFriendCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendCountRequest) Reset() {
	*x = GetFriendCountRequest{}
	mi := &file_api_proto_friend_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendCountRequest) ProtoMessage() {}

func (x *GetFriendCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendCountRequest.ProtoReflect.Descriptor instead.
func (*GetFriendCountRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetFriendCountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetFriendCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendCountResponse) Reset() {
	*x = GetFriendCountResponse{}
	mi := &file_api_proto_friend_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendCountResponse) ProtoMessage() {}

func (x *GetFriendCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendCountResponse.ProtoReflect.Descriptor instead.
func (*GetFriendCountResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetFriendCountResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFriendCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Request/Response messages for AreFriends
type AreFriendsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId      string                 `protobuf:"bytes,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AreFriendsRequest) Reset() {
	*x = AreFriendsRequest{}
	mi := &file_api_proto_friend_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AreFriendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreFriendsRequest) ProtoMessage() {}

func (x *AreFriendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreFriendsRequest.ProtoReflect.Descriptor instead.
func (*AreFriendsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{12}
}

func (x *AreFriendsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AreFriendsRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type AreFriendsResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AreFriends          bool                   `protobuf:"varint,1,opt,name=are_friends,json=areFriends,proto3" json:"are_friends,omitempty"`
	FriendshipCreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=friendship_created_at,json=friendshipCreatedAt,proto3" json:"friendship_created_at,omitempty"` // If they are friends
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AreFriendsResponse) Reset() {
	*x = AreFriendsResponse{}
	mi := &file_api_proto_friend_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AreFriendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreFriendsResponse) ProtoMessage() {}

func (x *AreFriendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreFriendsResponse.ProtoReflect.Descriptor instead.
func (*AreFriendsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{13}
}

func (x *AreFriendsResponse) GetAreFriends() bool {
	if x != nil {
		return x.AreFriends
	}
	return false
}

func (x *AreFriendsResponse) GetFriendshipCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FriendshipCreatedAt
	}
	return nil
}

// Request/Response messages for GetMutualFriends
type GetMutualFriendsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OtherUserId     string                 `protobuf:"bytes,2,opt,name=other_user_id,json=otherUserId,proto3" json:"other_user_id,omitempty"`
	Limit           int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"` // Default: 50, Max: 100
	PageToken       string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	IncludeUserInfo bool                   `protobuf:"varint,5,opt,name=include_user_info,json=includeUserInfo,proto3" json:"include_user_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMutualFriendsRequest) Reset() {
	*x = GetMutualFriendsRequest{}
	mi := &file_api_proto_friend_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMutualFriendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMutualFriendsRequest) ProtoMessage() {}

func (x *GetMutualFriendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMutualFriendsRequest.ProtoReflect.Descriptor instead.
func (*GetMutualFriendsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetMutualFriendsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetMutualFriendsRequest) GetOtherUserId() string {
	if x != nil {
		return x.OtherUserId
	}
	return ""
}

func (x *GetMutualFriendsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMutualFriendsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *GetMutualFriendsRequest) GetIncludeUserInfo() bool {
	if x != nil {
		return x.IncludeUserInfo
	}
	return false
}

type GetMutualFriendsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MutualFriend  *MutualFriend          `protobuf:"bytes,1,opt,name=mutual_friend,json=mutualFriend,proto3" json:"mutual_friend,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // Only in first response
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMutualFriendsResponse) Reset() {
	*x = GetMutualFriendsResponse{}
	mi := &file_api_proto_friend_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMutualFriendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMutualFriendsResponse) ProtoMessage() {}

func (x *GetMutualFriendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMutualFriendsResponse.ProtoReflect.Descriptor instead.
func (*GetMutualFriendsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetMutualFriendsResponse) GetMutualFriend() *MutualFriend {
	if x != nil {
		return x.MutualFriend
	}
	return nil
}

func (x *GetMutualFriendsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GetMutualFriendsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Request/Response messages for GetRecommendations
type GetRecommendationsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit           int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` // Default: 20, Max: 50
	PageToken       string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	MinScore        float64                `protobuf:"fixed64,4,opt,name=min_score,json=minScore,proto3" json:"min_score,omitempty"` // Minimum recommendation score
	IncludeUserInfo bool                   `protobuf:"varint,5,opt,name=include_user_info,json=includeUserInfo,proto3" json:"include_user_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetRecommendationsRequest) Reset() {
	*x = GetRecommendationsRequest{}
	mi := &file_api_proto_friend_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendationsRequest) ProtoMessage() {}

func (x *GetRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetRecommendationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetRecommendationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRecommendationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *GetRecommendationsRequest) GetMinScore() float64 {
	if x != nil {
		return x.MinScore
	}
	return 0
}

func (x *GetRecommendationsRequest) GetIncludeUserInfo() bool {
	if x != nil {
		return x.IncludeUserInfo
	}
	return false
}

type GetRecommendationsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Recommendation *Recommendation        `protobuf:"bytes,1,opt,name=recommendation,proto3" json:"recommendation,omitempty"`
	NextPageToken  string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount     int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // Only in first response
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetRecommendationsResponse) Reset() {
	*x = GetRecommendationsResponse{}
	mi := &file_api_proto_friend_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendationsResponse) ProtoMessage() {}

func (x *GetRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*GetRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetRecommendationsResponse) GetRecommendation() *Recommendation {
	if x != nil {
		return x.Recommendation
	}
	return nil
}

func (x *GetRecommendationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GetRecommendationsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Health check response
type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "SERVING" or "NOT_SERVING"
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_api_proto_friend_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{18}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Error handling
type ErrorDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       map[string]string      `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorDetails) Reset() {
	*x = ErrorDetails{}
	mi := &file_api_proto_friend_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDetails) ProtoMessage() {}

func (x *ErrorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_friend_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDetails.ProtoReflect.Descriptor instead.
func (*ErrorDetails) Descriptor() ([]byte, []int) {
	return file_api_proto_friend_service_proto_rawDescGZIP(), []int{19}
}

func (x *ErrorDetails) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorDetails) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorDetails) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_api_proto_friend_service_proto protoreflect.FileDescriptor

const file_api_proto_friend_service_proto_rawDesc = "" +
	"\n" +
	"\x1eapi/proto/friend_service.proto\x12\x06friend\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xea\x01\n" +
	"\x04User\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12!\n" +
	"\fdisplay_name\x18\x04 \x01(\tR\vdisplayName\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xa8\x01\n" +
	"\x06Friend\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tfriend_id\x18\x02 \x01(\tR\bfriendId\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12-\n" +
	"\vfriend_info\x18\x04 \x01(\v2\f.friend.UserR\n" +
	"friendInfo\"}\n" +
	"\fMutualFriend\x12\x1b\n" +
	"\tfriend_id\x18\x01 \x01(\tR\bfriendId\x12-\n" +
	"\vfriend_info\x18\x02 \x01(\v2\f.friend.UserR\n" +
	"friendInfo\x12!\n" +
	"\fmutual_count\x18\x03 \x01(\x05R\vmutualCount\"\xb2\x01\n" +
	"\x0eRecommendation\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12)\n" +
	"\tuser_info\x18\x02 \x01(\v2\f.friend.UserR\buserInfo\x12.\n" +
	"\x13mutual_friend_count\x18\x03 \x01(\x05R\x11mutualFriendCount\x12\x14\n" +
	"\x05score\x18\x04 \x01(\x01R\x05score\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\"H\n" +
	"\x10AddFriendRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tfriend_id\x18\x02 \x01(\tR\bfriendId\"w\n" +
	"\x11AddFriendResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12.\n" +
	"\n" +
	"friendship\x18\x03 \x01(\v2\x0e.friend.FriendR\n" +
	"friendship\"K\n" +
	"\x13RemoveFriendRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tfriend_id\x18\x02 \x01(\tR\bfriendId\"J\n" +
	"\x14RemoveFriendResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x8d\x01\n" +
	"\x11GetFriendsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12*\n" +
	"\x11include_user_info\x18\x04 \x01(\bR\x0fincludeUserInfo\"\x85\x01\n" +
	"\x12GetFriendsResponse\x12&\n" +
	"\x06friend\x18\x01 \x01(\v2\x0e.friend.FriendR\x06friend\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"0\n" +
	"\x15GetFriendCountRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"G\n" +
	"\x16GetFriendCountResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"I\n" +
	"\x11AreFriendsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tfriend_id\x18\x02 \x01(\tR\bfriendId\"\x85\x01\n" +
	"\x12AreFriendsResponse\x12\x1f\n" +
	"\vare_friends\x18\x01 \x01(\bR\n" +
	"areFriends\x12N\n" +
	"\x15friendship_created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x13friendshipCreatedAt\"\xb7\x01\n" +
	"\x17GetMutualFriendsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\"\n" +
	"\rother_user_id\x18\x02 \x01(\tR\votherUserId\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\x12*\n" +
	"\x11include_user_info\x18\x05 \x01(\bR\x0fincludeUserInfo\"\x9e\x01\n" +
	"\x18GetMutualFriendsResponse\x129\n" +
	"\rmutual_friend\x18\x01 \x01(\v2\x14.friend.MutualFriendR\fmutualFriend\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xb2\x01\n" +
	"\x19GetRecommendationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12\x1b\n" +
	"\tmin_score\x18\x04 \x01(\x01R\bminScore\x12*\n" +
	"\x11include_user_info\x18\x05 \x01(\bR\x0fincludeUserInfo\"\xa5\x01\n" +
	"\x1aGetRecommendationsResponse\x12>\n" +
	"\x0erecommendation\x18\x01 \x01(\v2\x16.friend.RecommendationR\x0erecommendation\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\x81\x01\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xb5\x01\n" +
	"\fErrorDetails\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12;\n" +
	"\adetails\x18\x03 \x03(\v2!.friend.ErrorDetails.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xf5\x04\n" +
	"\rFriendService\x12@\n" +
	"\tAddFriend\x12\x18.friend.AddFriendRequest\x1a\x19.friend.AddFriendResponse\x12I\n" +
	"\fRemoveFriend\x12\x1b.friend.RemoveFriendRequest\x1a\x1c.friend.RemoveFriendResponse\x12E\n" +
	"\n" +
	"GetFriends\x12\x19.friend.GetFriendsRequest\x1a\x1a.friend.GetFriendsResponse0\x01\x12O\n" +
	"\x0eGetFriendCount\x12\x1d.friend.GetFriendCountRequest\x1a\x1e.friend.GetFriendCountResponse\x12C\n" +
	"\n" +
	"AreFriends\x12\x19.friend.AreFriendsRequest\x1a\x1a.friend.AreFriendsResponse\x12W\n" +
	"\x10GetMutualFriends\x12\x1f.friend.GetMutualFriendsRequest\x1a .friend.GetMutualFriendsResponse0\x01\x12]\n" +
	"\x12GetRecommendations\x12!.friend.GetRecommendationsRequest\x1a\".friend.GetRecommendationsResponse0\x01\x12B\n" +
	"\vHealthCheck\x12\x16.google.protobuf.Empty\x1a\x1b.friend.HealthCheckResponseB\x19Z\x17mutual-friend/pkg/protob\x06proto3"

var (
	file_api_proto_friend_service_proto_rawDescOnce sync.Once
	file_api_proto_friend_service_proto_rawDescData []byte
)

func file_api_proto_friend_service_proto_rawDescGZIP() []byte {
	file_api_proto_friend_service_proto_rawDescOnce.Do(func() {
		file_api_proto_friend_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_friend_service_proto_rawDesc), len(file_api_proto_friend_service_proto_rawDesc)))
	})
	return file_api_proto_friend_service_proto_rawDescData
}

var file_api_proto_friend_service_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_proto_friend_service_proto_goTypes = []any{
	(*User)(nil),                       // 0: friend.User
	(*Friend)(nil),                     // 1: friend.Friend
	(*MutualFriend)(nil),               // 2: friend.MutualFriend
	(*Recommendation)(nil),             // 3: friend.Recommendation
	(*AddFriendRequest)(nil),           // 4: friend.AddFriendRequest
	(*AddFriendResponse)(nil),          // 5: friend.AddFriendResponse
	(*RemoveFriendRequest)(nil),        // 6: friend.RemoveFriendRequest
	(*RemoveFriendResponse)(nil),       // 7: friend.RemoveFriendResponse
	(*GetFriendsRequest)(nil),          // 8: friend.GetFriendsRequest
	(*GetFriendsResponse)(nil),         // 9: friend.GetFriendsResponse
	(*GetFriendCountRequest)(nil),      // 10: friend.GetFriendCountRequest
	(*GetFriendCountResponse)(nil),     // 11: friend.GetFriendCountResponse
	(*AreFriendsRequest)(nil),          // 12: friend.AreFriendsRequest
	(*AreFriendsResponse)(nil),         // 13: friend.AreFriendsResponse
	(*GetMutualFriendsRequest)(nil),    // 14: friend.GetMutualFriendsRequest
	(*GetMutualFriendsResponse)(nil),   // 15: friend.GetMutualFriendsResponse
	(*GetRecommendationsRequest)(nil),  // 16: friend.GetRecommendationsRequest
	(*GetRecommendationsResponse)(nil), // 17: friend.GetRecommendationsResponse
	(*HealthCheckResponse)(nil),        // 18: friend.HealthCheckResponse
	(*ErrorDetails)(nil),               // 19: friend.ErrorDetails
	nil,                                // 20: friend.ErrorDetails.DetailsEntry
	(*timestamppb.Timestamp)(nil),      // 21: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),              // 22: google.protobuf.Empty
}
var file_api_proto_friend_service_proto_depIdxs = []int32{
	21, // 0: friend.User.created_at:type_name -> google.protobuf.Timestamp
	21, // 1: friend.User.updated_at:type_name -> google.protobuf.Timestamp
	21, // 2: friend.Friend.created_at:type_name -> google.protobuf.Timestamp
	0,  // 3: friend.Friend.friend_info:type_name -> friend.User
	0,  // 4: friend.MutualFriend.friend_info:type_name -> friend.User
	0,  // 5: friend.Recommendation.user_info:type_name -> friend.User
	1,  // 6: friend.AddFriendResponse.friendship:type_name -> friend.Friend
	1,  // 7: friend.GetFriendsResponse.friend:type_name -> friend.Friend
	21, // 8: friend.AreFriendsResponse.friendship_created_at:type_name -> google.protobuf.Timestamp
	2,  // 9: friend.GetMutualFriendsResponse.mutual_friend:type_name -> friend.MutualFriend
	3,  // 10: friend.GetRecommendationsResponse.recommendation:type_name -> friend.Recommendation
	21, // 11: friend.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	20, // 12: friend.ErrorDetails.details:type_name -> friend.ErrorDetails.DetailsEntry
	4,  // 13: friend.FriendService.AddFriend:input_type -> friend.AddFriendRequest
	6,  // 14: friend.FriendService.RemoveFriend:input_type -> friend.RemoveFriendRequest
	8,  // 15: friend.FriendService.GetFriends:input_type -> friend.GetFriendsRequest
	10, // 16: friend.FriendService.GetFriendCount:input_type -> friend.GetFriendCountRequest
	12, // 17: friend.FriendService.AreFriends:input_type -> friend.AreFriendsRequest
	14, // 18: friend.FriendService.GetMutualFriends:input_type -> friend.GetMutualFriendsRequest
	16, // 19: friend.FriendService.GetRecommendations:input_type -> friend.GetRecommendationsRequest
	22, // 20: friend.FriendService.HealthCheck:input_type -> google.protobuf.Empty
	5,  // 21: friend.FriendService.AddFriend:output_type -> friend.AddFriendResponse
	7,  // 22: friend.FriendService.RemoveFriend:output_type -> friend.RemoveFriendResponse
	9,  // 23: friend.FriendService.GetFriends:output_type -> friend.GetFriendsResponse
	11, // 24: friend.FriendService.GetFriendCount:output_type -> friend.GetFriendCountResponse
	13, // 25: friend.FriendService.AreFriends:output_type -> friend.AreFriendsResponse
	15, // 26: friend.FriendService.GetMutualFriends:output_type -> friend.GetMutualFriendsResponse
	17, // 27: friend.FriendService.GetRecommendations:output_type -> friend.GetRecommendationsResponse
	18, // 28: friend.FriendService.HealthCheck:output_type -> friend.HealthCheckResponse
	21, // [21:29] is the sub-list for method output_type
	13, // [13:21] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_proto_friend_service_proto_init() }
func file_api_proto_friend_service_proto_init() {
	if File_api_proto_friend_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_friend_service_proto_rawDesc), len(file_api_proto_friend_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_friend_service_proto_goTypes,
		DependencyIndexes: file_api_proto_friend_service_proto_depIdxs,
		MessageInfos:      file_api_proto_friend_service_proto_msgTypes,
	}.Build()
	File_api_proto_friend_service_proto = out.File
	file_api_proto_friend_service_proto_goTypes = nil
	file_api_proto_friend_service_proto_depIdxs = nil
}
